# GLOSSAIRE

- [Général](#général)
- [Front-end](#front-end)
- [UX / UI](#ux-ui)
- [Architecture](#architecture)
- [Modélisation / Base de données](#modélisation---base-de-données)
- [Symfony](#symfony)
- [Sécurité](#sécurité)
- [RGPD](#rgpd)
- [SEO](#seo)
- [Gestion de projets / DevOps](#gestion-de-projets---devops)
- [English](#english)

## Général

1.	Quel est l’environnement à installer pour exécuter un script PHP ? Citer 2 exemples de logiciels permettant ce contexte

un ensemble de logiciels libres facilitant l'installation d'un serveur web local. Il comprend Apache (le serveur web), MySQL (la base de données), PHP.
Par exemple XAMPP et WAMPSERVER.

2.	Qu’est-ce qu’un algorithme ?  

Un algorithme est une série d'étapes précises pour accomplir une tâche ou résoudre un problème, souvent utilisé en informatique. 

3.	Qu’est-ce qu’une variable ? Par quel symbole est préfixée une variable en PHP ?

une variable est un conteneur pour stocker des données, comme des nombres, des chaînes de caractères ou des tableaux, identifiés par un nom précédé du signe "$".

4.	Qu’est-ce que la portée d’une variable ?

La portée d'une variable indique où cette variable peut être utilisée dans votre code. 
Une variable peut être accessible uniquement à l'endroit où elle est créée (portée locale) ou disponible partout dans le script (portée globale).

5.	Qu’est-ce qu’une constante ? Quelle est la différence avec une variable ?

Une constante est un identifiant associé à une valeur fixe qui ne change pas. 
Elle diffère d'une variable qui peut varier pendant l'exécution et a des portées locales ou globales.

6.	Qu’est-ce qu’une superglobale, combien en existent-ils et donner un exemple d’utilisation 

Une superglobale est une variable prédéfinie utilisée pour accéder à des données globales. 
Il existe neuf superglobales, dont `$_GET`, `$_POST`et `$_SESSION`. 
Par exemple, `$_GET` est utilisée pour récupérer des données depuis l'URL dans un formulaire HTML.

7.	Quels sont les différents types (primitifs) que l’on peut associer à une variable en PHP ? Les citer et en donner des exemples (ne pas oublier le type d’une variable sans valeur)

En PHP, les types primitifs associables à une variable sont les entiers INT, nombres à virgule FLOAT, chaînes de caractères STRING, booléens, tableaux ARRAY, objets et NULL.

8.	Existe-t-il plusieurs types de tableaux en PHP, si oui lesquels ?

En PHP, il existe plusieurs types de tableaux, notamment les tableaux numériques (indexés), les tableaux associatifs (utilisant des clés associatives) et les tableaux multidimensionnels (contenant des tableaux à plusieurs niveaux).

9.	Quelles sont les différentes structures de contrôles qu’il existe en algorithmie ? Donner un exemple pour chacune d’entre elles

Les différentes structures de contrôle en algorithmie sont : la structure conditionnelle (ex: if-else), la boucle (ex: for, while), et la structure de séquence (ex: exécution linéaire)

10.	Quelle est la fonction PHP permettant de demander la longueur d’une chaîne de caractères ?

La fonction PHP permettant de demander la longueur d'une chaîne de caractères est strlen()

11.	Qu’est-ce qu’une session ? Quelle fonction permet de démarrer une session en PHP ? Donner un exemple d’utilisation en PHP

Une session en PHP est un moyen de stocker des données utilisateur sur le serveur. La fonction PHP permettant de démarrer une session est session_start()

12.	Qu’est-ce qu’un cookie ? Donner un exemple d’utilisation en PHP

Un cookie en PHP est un petit fichier stocké sur l'ordinateur client, contenant des informations sur l'utilisateur.
exemple : setcookie("prefered_language", "fr", time() + (24 * 3600), "/");

13.	Quelle est la différence entre les instructions « require » et « include » en PHP

La différence entre les instructions "require" et "include" en PHP est que "require" génère une erreur fatale si le fichier inclus n'est pas trouvé, tandis que "include" génère seulement un avertissement.

14.	Comment effectuer une redirection en PHP ?

Pour effectuer une redirection en PHP, on utilise la fonction header() avec l'en-tête "Location"

15.	Définir la partie « front-end » et « back-end » d’une application

La partie "front-end" d'une application se réfère à la partie visible et interactive que l'utilisateur voit et utilise directement, tandis que la partie "back-end" se réfère à la partie du système qui gère les fonctionnalités en arrière-plan et interagit avec le serveur.

16.	Définir le contrôle de version ? Qu’est-ce que Git ?

Le contrôle de version est un système qui enregistre les modifications apportées à un projet au fil du temps. Git est un logiciel de contrôle de version populaire utilisé pour suivre les modifications du code source

17.	Qu’est-ce qu’un CMS ? Citer au moins 2 exemples

Un CMS (Content Management System) est une application logicielle permettant de créer, gérer et organiser le contenu d'un site web sans nécessiter de compétences techniques avancées en programmation. Deux exemples de CMS sont WordPress et Drupal.


## Front-end

18.	Définir HTML

HTML (HyperText Markup Language) est un langage de balisage utilisé pour structurer et présenter le contenu sur le Web. Il permet de définir la structure des documents en utilisant des balises pour marquer différents types de contenu, tels que du texte, des images, des liens, etc.

19.	Définir CSS

CSS (Cascading Style Sheets) est un langage de feuilles de style utilisé pour styliser et mettre en forme les documents HTML. Il permet de contrôler l'apparence des éléments HTML en définissant des règles de style telles que la couleur, la taille, la police, la disposition, etc.

20.	Définir Javascript

Javascript est un langage de programmation de scripts principalement utilisé pour rendre les pages web interactives et dynamiques. Il est souvent utilisé pour manipuler le contenu HTML, interagir avec l'utilisateur, et effectuer des actions en réponse à des événements.

21.	Définir JSON. Dans quel contexte ce format est-il utilisé ? 

JSON (JavaScript Object Notation) est un format léger d'échange de données utilisé pour stocker et échanger des données structurées entre un serveur et un client. Il est souvent utilisé dans les applications web pour transférer des données entre le serveur et le navigateur
On utilise JSON dans le contexte des échanges de données entre le serveur et le client, comme les réponses aux requêtes AJAX, les configurations de l'application, etc

22.	Peut-on interpréter du Javascript côté serveur ? Si oui, comment ?

Non, Javascript est principalement un langage de programmation côté client, exécuté par le navigateur web. Cependant, avec l'utilisation de moteurs d'exécution de Javascript côté serveur tels que Node.js, il est possible d'exécuter du Javascript côté serveur.

23.	Qu’est-ce qu’un sélecteur CSS ?

Un sélecteur CSS est une expression qui permet de cibler des éléments HTML spécifiques pour leur appliquer des styles. Les sélecteurs CSS peuvent être basés sur différents critères tels que les balises HTML, les classes, les id, les attributs, etc.

24.	Quelle balise HTML permet de créer un lien hypertexte ?

La balise HTML <a> permet de créer un lien hypertexte

25.	Qu’est-ce qu’une requête AJAX ?

Une requête AJAX (Asynchronous JavaScript and XML) est une technique de développement web qui permet d'envoyer et de recevoir des données du serveur en arrière-plan, sans avoir à recharger toute la page web. Cela permet de créer des applications web plus dynamiques et interactives

26.	Quel sélecteur CSS permet de sélectionner tous les éléments d’une classe spécifique ? D’un identifiant spécifique ?

Pour sélectionner tous les éléments d'une classe spécifique en CSS, on utilise le sélecteur de classe ".". Pour sélectionner un élément par son identifiant, on utilise le sélecteur d'identifiant "#"

27.	Définir le responsive design

Le responsive design signifie simplement concevoir des sites web qui s'adaptent à différents appareils et tailles d'écrans en utilisant des techniques flexibles de mise en page et des règles CSS spécifiques

28.	Qu’est-ce que le templating ?

Le templating est un processus de création de modèles de conception réutilisables pour générer dynamiquement des pages web. Il permet de séparer la structure et le contenu d'une page en utilisant des modèles pré-définis dans lesquels le contenu est injecté dynamiquement.

29.	Qu’est-ce qu’une fonction anonyme en Javascript ?

Une fonction anonyme en Javascript est une fonction qui n'a pas de nom et qui est définie de manière littérale. Elle est souvent utilisée comme argument pour d'autres fonctions ou pour créer des expressions de fonction

30.	Quelle méthode JavaScript est utilisée pour ajouter un élément à la fin d'un tableau ?

La méthode JavaScript utilisée pour ajouter un élément à la fin d'un tableau est "push()"

31.	Qu’est-ce qu’un « media query » ?

Un media query en CSS ajuste les styles en fonction des caractéristiques du périphérique utilisateur comme la taille de l'écran, permettant des mises en page adaptatives et réactives

32.	Qu’est-ce qu’un pseudo élément en CSS ?

Un pseudo-élément en CSS permet de styliser une partie spécifique d'un élément HTML en utilisant des mots-clés tels que :before et :after pour ajouter du contenu ou modifier son apparence

33.	Qu’est-ce que Bootstrap ? Donner d’autres exemples équivalent

Bootstrap est un framework front-end populaire pour les sites web réactifs, offrant des outils CSS et JavaScript pré-stylisés. D'autres alternatives incluent Foundation, Materialize et Bulma

34.	Quand un formulaire HTML est créé, quelles sont les 2 méthodes qui peuvent lui être associées ? Donner la différence entre ces 2 méthodes

Lorsqu'un formulaire HTML est créé, les deux méthodes qui peuvent lui être associées sont GET et POST. La méthode GET envoie les données du formulaire dans l'URL, tandis que la méthode POST envoie les données du formulaire dans le corps de la requête HTTP, ce qui les rend invisibles dans l'URL et plus appropriées pour l'envoi de données sensibles


## UX UI

35.	Quelle est la différence entre UX Design et UI Design ?

UX Design se concentre sur l'expérience globale de l'utilisateur, tandis que UI Design se focalise sur l'apparence et l'interaction de l'interface utilisateur

36.	Qu’est-ce qu’un wireframe ? 

Un wireframe est comme un croquis basique de l'apparence d'un site web ou d'une application, utilisé pour organiser les éléments sans se préoccuper des détails graphiques

37.	Qu’est-ce qu’un prototype ? 

Un prototype est une version initiale d'un produit ou d'une partie de produit utilisée pour tester des idées et des fonctionnalités avant le développement complet

38.	Qu’est-ce que la hiérarchie visuelle en UI Design ?

La hiérarchie visuelle en UI Design consiste à organiser les éléments de manière à ce que les plus importants soient mis en avant, permettant aux utilisateurs de naviguer facilement dans l'interface

39.	Qu’est-ce que l’accessibilité en UX Design ? 

L'accessibilité en UX Design consiste à rendre les produits numériques faciles à utiliser pour tous, y compris les personnes handicapées ou ayant des besoins spéciaux, en concevant des interfaces adaptées à leurs besoins

40.	Qu’est-ce qu’une grille de mise en page ?

Une grille de mise en page est un système de lignes utilisé pour organiser visuellement le contenu sur une page web ou une application

41.	Qu’est-ce que la notion d’affordance en UX Design ?

L'affordance en UX Design fait référence à la capacité d'un élément d'interface à suggérer sa fonction ou son utilisation

42.	Qu’est-ce qu’un « mobile first design » ?

Le "mobile first design" est une approche de conception qui consiste à créer d'abord une expérience utilisateur optimisée pour les appareils mobiles, puis à l'adapter aux écrans plus grands


IV. Programmation orientée objet (POO)

43.	Donner une définition de la programmation orientée objet 
44.	Qu’est-ce qu’une classe ? Comment la déclare-t-on ?
45.	Qu’est-ce qu’un objet ?
46.	Définir la notion de propriété / attribut / méthode
47.	Qu’est-ce que la visibilité d’une propriété ou d’une méthode ? Citer les différents types de visibilité
48.	Quelle est la méthode spécifique utilisée pour créer un nouvel objet à partir d’une classe ?
49.	Qu’est-ce que l’encapsulation ?
50.	Que signifie « étendre une classe » ? Quelle est le concept clé mis en œuvre ? Donner un exemple
51.	Définir l’opérateur de résolution de portée
52.	Définir une méthode / propriété statique
53.	Définir le polymorphisme en POO
54.	Définir une méthode / classe abstraite ?
55.	Définir le chaînage de méthodes
56.	Qu’est-ce que la méthode __toString() ? Existe-t-il d’autres méthodes « magiques »
57.	Qu’est-ce qu’un « autoload » ?
58.	Comment appelle-t-on en français les « getters » et les « setters » ?
59.	Qu’est-ce que la sérialisation en PHP ? 

## Architecture 
60.	Qu’est-ce que l’architecture client / serveur ? Grâce à quel type de requête peut-on interroger le serveur. Définir l’acronyme de ce type de requête. Si on ajoute un « S » à cet acronyme, expliquer la différence
61.	Donner la définition d’un design pattern. Citer au moins 3 exemples de design pattern
62.	Qu’est-ce que l’architecture MVC ?
63.	Quel est le rôle de chaque couche du design pattern MVC : Model, View, Controller ?
64.	Quels sont les avantages de l’architecture MVC ?
65.	Existe-t-il des variantes à l’architecture MVC ?
66.	Qu’est-ce qu’une API ? Définir l’architecture REST

## Modélisation - Base de données
67.	Qu’est-ce que la modélisation de données ? Définir la méthode Merise
68.	Quelles sont les 3 étapes principales de la méthode Merise ? 
a.	Analyse, conception et réalisation
b.	Planification, exécution et contrôle
c.	Création, modification et suppression
69.	Qu’est-ce qu’un modèle conceptuel de données (MCD) en Merise ?
70.	Qu’est-ce qu’un modèle logique de données (MLD) en Merise ?
71.	Donner la définition des mots suivants :
a.	Entité
b.	Relation
c.	Cardinalité
d.	Clé primaire / clé étrangère
72.	Que devient une relation de type « Many To Many » dans le modèle logique de données ?
73.	Qu’est-ce qu’une base de données ?
74.	Définir les notions suivantes : 
a.	SQL
b.	MySQL
c.	SGBD (donner 2 exemples de SGBD)
75.	Dans une base de données, les données sont stockées dans des ___. Celles-ci sont constituées de lignes appelées ___ et de colonnes appelées ___
76.	Quelle est la différence entre une base de données relationnelle et non relationnelle ?
77.	Qu’est-ce qu’une jointure dans une base de données ? En existe-t-il plusieurs ? Si oui lesquelles ?
78.	A quoi sert une vue dans une base de données ?
79.	Qu’est-ce que l’intégrité référentielle dans une base de données ?
80.	Quelles sont les fonctions d’agrégation en SQL ?
81.	Qu’est-ce qu’un CRUD dans le contexte d’une base de données ?
82.	Quelles sont les clauses qui permettent de :
a.	Insérer un nouvel enregistrement dans une table
b.	Modifier un enregistrement dans une table
c.	Supprimer un enregistrement dans une table
d.	Supprimer la base de données
e.	Filtrer les résultats d’une requête SQL
f.	Trier les résultats d’une requête SELECT
g.	Regrouper les résultats d'une requête SELECT en fonction d'une colonne spécifique
h.	Concaténer 2 chaînes de caractères 
83.	Comment se connecter à une base de données en PHP ? Quelle est la classe native utilisée ?

## Symfony
84.	Qu’est-ce que Symfony ?
85.	Sur quel langage de programmation et design pattern repose Symfony ? 
86.	Quelle est la dernière version en date de Symfony ?
87.	Qu’est-ce qu’un bundle ? 
88.	Quel est le moteur de template utilisé par défaut dans Symfony ?
89.	Qu’est-ce qu’un ORM ? Quel est son utilité et comment s’appelle-t-il au sein de Symfony ?
90.	Qu’est-ce que l’injection de dépendances ? Quel est l’outil utilisé dans ce contexte et quel fichier contient l’intégralité des dépendances du projet ?
91.	Que permet le bundle Maker au sein de Symfony ? 
92.	Quel est le langage de requêtage exploité au sein d’un projet Symfony ?
93.	Quel est le composant qui garantit l’authentification et l’autorisation des utilisateurs ?

## Sécurité
94.	Qu’est-ce que l’injection SQL ? Comment s’en prémunir ?
95.	Qu’est-ce que la faille XSS ? Comment s’en prémunir ?
96.	Qu’est-ce que la faille CSRF ? Comment s’en prémunir ?
97.	Définir l’attaque par force brute et l’attaque par dictionnaire
98.	Existe-t-il d’autres failles de sécurité ? Citer celles-ci et expliquer simplement leur comportement
99.	A quoi servent l’authentification et l’autorisation dans un contexte d’application web ?
100.	Définir la notion de hachage d’un mot de passe et citer des algorithmes de hachage
101.	Qu’est-ce qu’une politique de mots de passe forts ?
102.	Qu’est-ce que l’hameçonnage ?
103.	Définir la « validation des entrées »

## RGPD
104.	Qu’est-ce que le RGPD ?
105.	Quel est son objectif principal ?
106.	Quelle est la date d’entrée en vigueur du RGPD ?
107.	Quelles sont les sanctions possibles en cas de non-respect du RGPD ?
108.	En France, quel est l’autorité administrative qui s’occupe de faire appliquer le RGPD ?
109.	Quel est le consentement valide selon le RPGD ?
110.	Qu’est-ce qu’une politique de confidentialité ?
111.	Quelle est la durée de conservation maximale des données personnelles selon le RGPD ?
112.	Quels sont les droits des utilisateurs selon le RGPD ?
113.	Qu’est-ce que le principe de minimisation des données selon le RGPD ?

## SEO
114.	Qu’est-ce que le SEO ? 
115.	Quel est l’objectif principal du SEO ?
116.	Existe-t-il plusieurs types de référencement ? Lesquels ?
117.	Qu’est-ce que la densité de mots-clés en SEO ?
118.	Qu’est-ce qu’une balise « alt » ?
119.	Qu’est-ce que la balise « meta description » ?
120.	Qu’est-ce que le « nofollow » en SEO ?
121.	Quelle est l'importance du contenu de qualité pour le référencement d'un site web ?
122.	Pourquoi est-il important d'utiliser des balises de titre (h1, h2, h3, etc.) de manière structurée ?
123.	Quelle est la recommandation pour les URL d'un site web bien référencé ?
124.	Qu'est-ce que le maillage interne et pourquoi est-il important pour le référencement ?
125.	Qu'est-ce que l'optimisation des images pour le référencement ?
126.	Qu'est-ce qu'un plan de site (sitemap) et pourquoi est-il important pour le référencement ?

## Gestion de projets - DevOps
127.	Qu’est-ce que la gestion de projet ?	
128.	Qu’est-ce qu’une méthode Agile de gestion de projet ? 
129.	Expliquer la méthode MoSCoW en quelques lignes et citer ses avantages
130.	A quoi sert la méthodologie MVP ? Citer les caractéristiques clés
131.	Qu’est-ce que la planification itérative ?
132.	Citer 3 méthodes Agiles dans le cadre d’un projet informatique
133.	Qu’est-ce qu’une réunion de revue de projet ?
134.	Qu’est-ce qu’un livrable dans un projet ? 
135.	Quels sont les 3 piliers SCRUM ? Définir chacun d’entre eux
136.	Qu’est-ce que le DevOps et quel est son objectif principal ?
137.	Qu’est-ce que l’intégration continue ? 
138.	Qu’est-ce que Docker ? Et en quoi est-il utile dans le cadre du DevOps ?
139.	Qu’est-ce qu’un test unitaire ? 
140.	Quelle est l'unité de code testée lors d'un test unitaire ?
141.	Quelles sont les caractéristiques d'un bon test unitaire ?
142.	Qu'est-ce qu'une assertion dans un test unitaire ?
 
## English
1)	What does JavaScript enable you to do on a website ?
a.	Add interactive behavior and dynamic content
b.	Define the layout and design of web pages
c.	Handle server-side operations
2)	Which programming language is primarily used for server-side web development ?
a.	PHP
b.	JavaScript
c.	HTML
3)	What is the purpose of a web browser ?
a.	To render and display web pages
b.	To execute serve-side code
c.	To manage databases
4)	What is the difference between GET and POST methods in HTTP ?
a.	GET retrieves data from a server, while POST submits data to a server
b.	GET submits data to a server, while POST retrieves data from a server
c.	GET and POST methods are interchangeable
5)	What is the purpose of version control systems (e.g., Git) in web development ?
a.	To track changes and manage collaborative development
b.	To optimize website loading speed
c.	To handle server-side scripting
6)	What is the purpose of a framework in web development ?
a.	To provide a structured environment for building web applications
b.	To handle network protocols and data transfer
c.	To create visual designs and layouts for websites
7)	What does NoSQL stand for ?
a.	Not Only SQL
b.	Non-Structured Query Language
c.	New Object-Oriented Language
8)	Which of the following is a characteristic of NoSQL databases ?
a.	Strict schema enforcement
b.	Support for complex transactions
c.	Scalability and flexible data models
